# Stage 1: Cache Gradle dependencies
FROM gradle:latest AS cache
RUN mkdir -p /home/gradle/cache_home
ENV GRADLE_USER_HOME=/home/gradle/cache_home

# Copy Gradle configuration files from the current module
COPY build.gradle.* gradle.properties /home/gradle/app/
COPY ./gradle /home/gradle/app/gradle
WORKDIR /home/gradle/app

# Run Gradle to cache dependencies
RUN gradle clean build -i --stacktrace

# Stage 2: Build Application
FROM gradle:latest AS build
COPY --from=cache /home/gradle/cache_home /home/gradle/.gradle

# Copy everything from onlyTradeBE (since Dockerfile is already inside it, just copy `.`)
COPY . /usr/src/app/
WORKDIR /usr/src/app

# Explicitly copy settings.gradle.kts
COPY settings.gradle.kts /usr/src/app/settings.gradle.kts

# Set up correct permissions for the build
COPY --chown=gradle:gradle . /home/gradle/src
WORKDIR /home/gradle/src

# Run Gradle build
RUN gradle build --no-daemon  # Change to buildFatJar if necessary

# Stage 3: Create the Runtime Image
FROM amazoncorretto:22 AS runtime
EXPOSE 8080
RUN mkdir /app

# Copy the built JAR file to the runtime image
COPY --from=build /home/gradle/src/build/libs/*.jar /app/ktor-docker-sample.jar

# Run the application
ENTRYPOINT ["java", "-jar", "/app/ktor-docker-sample.jar"]
